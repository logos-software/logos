# Generated by Django 5.2.1 on 2025-05-10 23:08

from django.db import migrations
from django.utils.text import slugify


def create_initial_data(apps, schema_editor):
    # Importar os modelos
    EventPermission = apps.get_model('users', 'EventPermission')
    Module = apps.get_model('core', 'Module')
    NoteModule = apps.get_model('notes', 'NoteModule')
    NoteStatus = apps.get_model('notes', 'NoteStatus')
    NoteTypeGroup = apps.get_model('notes', 'NoteTypeGroup')
    NoteType = apps.get_model('notes', 'NoteType')

    # Criar permissões de notas
    note_permission = EventPermission.objects.create(
        name='Gerenciar Notas',
        short_name='Notas',  
        codename='manage_notes',
        description='Permissão para gerenciar notas no sistema'
    )

    # Criar status inicial de notas
    draft_status = NoteStatus.objects.create(
        name='Rascunho',
        description='Status inicial para notas em rascunho',
        is_active=True,
        order=0
    )

    # Criar módulo de notas
    notes_module = Module.objects.create(
        name='Notas',
        code='NOTES',
        slug=slugify('notas'),
        description='Módulo para gerenciamento de notas do sistema',
        icon='fas fa-sticky-note',
        requires_authentication=True,
        permission_required=note_permission,
        is_visible=True,
        is_active=True,
        order=1
    )

    # Criar configuração do módulo de notas
    note_module_config = NoteModule.objects.create(
        module=notes_module,
        note_status=draft_status,
        require_approval=True,
        allow_drafts=True
    )

    # Criar grupo de tipo de nota para Afastamento
    afastamento_group = NoteTypeGroup.objects.create(
        module=note_module_config,
        name='Afastamento',
        description='Notas relacionadas a afastamentos de funcionários',
        is_active=True
    )

    # Criar tipo de nota Férias
    NoteType.objects.create(
        group=afastamento_group,
        name='Férias',
        description='Notas para solicitação e controle de férias',
        is_active=True
    )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        ('notes', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_initial_data, migrations.RunPython.noop)
    ]
