# Generated by Django 5.2.1 on 2025-05-10 23:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteStatus',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
            ],
            options={
                'verbose_name': 'Status de Nota',
                'verbose_name_plural': 'Status de Nota',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NoteType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Tipo de Nota',
                'verbose_name_plural': 'Tipos de Nota',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('is_draft', models.BooleanField(default=True, verbose_name='Rascunho')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Versão')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='notes_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes', to='notes.notestatus', verbose_name='Status')),
                ('note_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notes', to='notes.notetype', verbose_name='Tipo de Nota')),
            ],
            options={
                'verbose_name': 'Nota',
                'verbose_name_plural': 'Notas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteApproval',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_approved', models.BooleanField(default=False, verbose_name='Aprovado')),
                ('comments', models.TextField(blank=True, verbose_name='Comentários')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='notes.note', verbose_name='Nota')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_approvals', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Aprovação de Nota',
                'verbose_name_plural': 'Aprovações de Nota',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteEvent',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=50, verbose_name='Tipo de Evento')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='notes.note', verbose_name='Nota')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_events', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Evento de Nota',
                'verbose_name_plural': 'Eventos de Nota',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteModule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('require_approval', models.BooleanField(default=True, help_text='Se notas deste módulo requerem aprovação', verbose_name='Requer Aprovação')),
                ('allow_drafts', models.BooleanField(default=True, help_text='Se notas podem ser salvas como rascunho', verbose_name='Permite Rascunhos')),
                ('module', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='note_module', to='core.module', verbose_name='Módulo')),
                ('note_status', models.ForeignKey(help_text='Status inicial para notas criadas neste módulo', on_delete=django.db.models.deletion.PROTECT, related_name='note_modules', to='notes.notestatus', verbose_name='Status Inicial')),
            ],
            options={
                'verbose_name': 'Módulo de Notas',
                'verbose_name_plural': 'Módulos de Notas',
                'ordering': ['module__order', 'module__name'],
            },
        ),
        migrations.CreateModel(
            name='NoteTypeGroup',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_groups', to='notes.notemodule', verbose_name='Módulo')),
            ],
            options={
                'verbose_name': 'Grupo de Tipos de Nota',
                'verbose_name_plural': 'Grupos de Tipos de Nota',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='notetype',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='note_types', to='notes.notetypegroup', verbose_name='Grupo de Tipos'),
        ),
        migrations.CreateModel(
            name='NoteRevision',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('version', models.PositiveIntegerField(verbose_name='Número da Versão')),
                ('comments', models.TextField(blank=True, verbose_name='Comentários da Revisão')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisions', to='notes.note', verbose_name='Nota')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_revisions', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Revisão de Nota',
                'verbose_name_plural': 'Revisões de Nota',
                'ordering': ['-version'],
                'unique_together': {('note', 'version')},
            },
        ),
    ]
