# Dockerfile para ambiente de produção
FROM python:3.10-slim as builder

# Define variáveis de ambiente para Python
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Define o diretório de trabalho
WORKDIR /app

# Instala dependências do sistema para compilação
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libaio1 \
    unzip \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Oracle Instant Client (necessário para cx_Oracle)
WORKDIR /opt/oracle
RUN curl -LO https://download.oracle.com/otn_software/linux/instantclient/instantclient-basiclite-linuxx64.zip \
    && unzip instantclient-basiclite-linuxx64.zip \
    && rm instantclient-basiclite-linuxx64.zip

WORKDIR /app

# Copia requirements.txt e instala dependências Python
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt


# Estágio final para imagem leve
FROM python:3.10-slim

# Define as variáveis de ambiente
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Cria usuário não-privilegiado para execução da aplicação
RUN addgroup --system django && \
    adduser --system --ingroup django django

# Instala dependências do sistema
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq-dev \
    libaio1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copia o Oracle Instant Client do estágio anterior
COPY --from=builder /opt/oracle /opt/oracle
RUN echo /opt/oracle/instantclient* > /etc/ld.so.conf.d/oracle-instantclient.conf && ldconfig

# Define o diretório de trabalho
WORKDIR /app

# Copia as dependências Python compiladas
COPY --from=builder /app/wheels /wheels
RUN pip install --no-cache-dir /wheels/*

# Copia o código do projeto
COPY . /app/

# Coleta arquivos estáticos
RUN python manage.py collectstatic --noinput

# Ajusta permissões
RUN chown -R django:django /app
USER django

# Expõe a porta usada pelo gunicorn
EXPOSE 8000

# Comando para iniciar a aplicação com gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "config.wsgi:application"]
